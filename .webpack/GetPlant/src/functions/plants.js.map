{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"moment-timezone\"","webpack:///./src/models/baseModel.js","webpack:///external \"aws-sdk\"","webpack:///./src/functions/plants.js","webpack:///external \"moment\"","webpack:///./src/models/index.js","webpack:///./src/models/measureModel.js","webpack:///./src/utils/aws/index.js","webpack:///./src/utils/aws/dynamodb.js","webpack:///external \"urlify\"","webpack:///external \"uuid/v1\"","webpack:///external \"uuid/v5\"","webpack:///./src/models/gardenerModel.js","webpack:///./src/models/deviceModel.js","webpack:///./src/models/plantModel.js","webpack:///./src/models/gardenModel.js"],"names":["DynamoDB","require","urlify","create","spaces","trim","toLower","uuidv1","uuidv5","BaseModel","constructor","props","setData","invokeCallbacks","db","tableName","key","value","Object","entries","undefined","idColumnName","secondaryIdColumnName","generateUUIDasId","attributeName","_generateUUIDasId","idIsUUID","newRecord","Promise","resolve","reject","errors","autoIncrementId","_idIsAutoIncremented","idIsAutoIncremented","records","findAll","map","record","parseInt","sort","pop","save","isValid","then","put","toJson","catch","error","update","data","delete","keys","addJsonAttributes","attributes","_jsonAttributes","concat","jsonAttributes","customJson","attrs","finalJson","attr","Array","isArray","elem","generateSlug","validatePresence","validateType","validateInclusion","validateAssociations","valid","length","validatesPresenceOf","_requiredVariables","requiredVariables","validatesTypeOf","_typeVariables","assign","typeVariables","validatesAssociated","_associatedVariables","associatedVariables","association","JSON","stringify","validatesInclusionOf","_inclusionVariables","inclusionVariables","indexOf","callbackMoment","action","varName","callback","call","afterInitialize","funcs","afterInitializeCallbacks","_afterInitializeCallbacks","beforeValidation","beforeValidationCallbacks","_beforeValidationCallbacks","onValidation","onValidationCallbacks","_onValidationCallbacks","afterValidation","afterValidationCallbacks","_afterValidationCallbacks","beforeSave","beforeSaveCallbacks","_beforeSaveCallbacks","onSave","onSaveCallbacks","_onSaveCallbacks","afterSave","afterSaveCallbacks","_afterSaveCallbacks","beforeUpdate","beforeUpdateCallbacks","_beforeUpdateCallbacks","onUpdate","onUpdateCallbacks","_onUpdateCallbacks","afterUpdate","afterUpdateCallbacks","_afterUpdateCallbacks","beforeDelete","beforeDeleteCallbacks","_beforeDeleteCallbacks","onDelete","onDeleteCallbacks","_onDeleteCallbacks","afterDelete","afterDeleteCallbacks","_afterDeleteCallbacks","registerIndexes","indexes","_indexes","getIndexes","find","id","secondary","idValue","item","where","args","opts","items","createSlugFrom","slugFromAttribute","slugAttribute","_slugFromAttribute","_slugAttribute","shouldGenerateSlug","module","exports","moment","AWS","apiGateway","APIGateway","PlantModel","GardenerModel","DeviceModel","GardenModel","getPlant","event","context","plantId","pathParameters","plant","console","log","success","model","statusCode","body","message","listPlants","params","queryStringParameters","deviceId","partseInt","gardenId","gardenerId","lenght","plants","plantsResponse","newPlant","parse","name","type","device","plantsCount","garden","apiResponse","MeasureModel","process","env","dynamodbMeasureTable","sensor","measuredAt","tz","format","base","hash","range","Sensor","PlantId","dynamoDb","DocumentClient","getAll","TableName","idObject","keyParams","get","Key","promise","Item","json","generateExpressions","lastEvaluatedKey","getAllRequest","response","scanReturn","query","scan","Items","LastEvaluatedKey","batchWrite","putRequests","PutRequest","putRequestsChunks","divideArrayInChunks","all","chunk","RequestItems","allResponses","unprocessedItems","UnprocessedItems","guaranteedBatchWrite","errorObject","ExpressionAttributeNames","ExpressionAttributeValues","KeyConditionExpressions","Expressions","counter","indexName","index","attributeValue","isObject","operator","finalValue","min","max","push","extraParts","partCounter","part","split","slice","attrName","splice","finalAttributeName","join","limit","paginated","exclusiveStartKey","array","chunkSize","reduce","resultArray","chunkIndex","Math","floor","dynamodbGardenerTable","email","cognitoUserId","dynamodbDeviceTable","createdAt","status","GardenId","GardenerId","dynamodbPlantTable","soilHumidity","soilHumidityStatus","lumens","lightStatus","lastMeasuredAt","DeviceId","dynamodbGardenTable","devicesCount"],"mappings":"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","file":"src/functions/plants.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = require(\"moment-timezone\");","const { DynamoDB } = require('../utils/aws/index');\nconst urlify = require('urlify').create({\n  spaces: \"-\",\n  trim: true,\n  toLower: true,\n});\nconst uuidv1 = require('uuid/v1');\nconst uuidv5 = require('uuid/v5');\n\nclass BaseModel {\n  constructor(props = {}) {\n    this.setData(props);\n    this.invokeCallbacks(\"after\", \"Initialize\")\n  }\n\n  get db() {\n    return this.constructor.db();\n  }\n\n  static db() {\n    if (this.tableName) {\n      return new DynamoDB(this.tableName);\n    } else {\n      return null;\n    }\n  }\n\n  setData(props) {\n    for (var [key, value] of Object.entries(props)) {\n      if (value !== \"\" && value !== null && value !== undefined) {\n        this[key] = value;\n      }\n    }\n  }\n\n  // ID\n    get idColumnName() {\n      return this.constructor.idColumnName;\n    }\n\n    get secondaryIdColumnName() {\n      return this.constructor.secondaryIdColumnName;\n    }\n\n    static generateUUIDasId(attributeName) {\n      this._generateUUIDasId = attributeName;\n    }\n\n    static idIsUUID() {\n      return this._generateUUIDasId || false;\n    }\n\n    newRecord() {\n      return (\n        this[this.idColumnName] === ''\n        || this[this.idColumnName] === undefined\n        || this[this.idColumnName] === null\n      )\n    }\n\n    generateUUIDasId() {\n      return new Promise((resolve, reject) => {\n        if (this.newRecord()) {\n          if (!this.constructor.idIsUUID()) {\n            resolve();\n          } else {\n            if (this[this.constructor.idIsUUID()]) {\n              if (this.idColumnName !== null) {\n                this[this.idColumnName] = uuidv5(this[this.constructor.idIsUUID()], uuidv1());\n                resolve()\n              } else {\n                reject({\n                  errors: {\n                    idColumnName: 'is not defined',\n                  },\n                })\n              }\n            } else {\n              reject({\n                errors: {\n                  tableName: 'is not defined',\n                },\n              })\n            }\n          }\n        } else {\n          resolve();\n        }\n      })\n    }\n\n    static autoIncrementId() {\n      this._idIsAutoIncremented = true;\n    }\n\n    static idIsAutoIncremented() {\n      return this._idIsAutoIncremented || false;\n    }\n\n    autoIncrementId() {\n      return new Promise(async (resolve, reject) => {\n        if (this.newRecord()) {\n          if (!this.constructor.idIsAutoIncremented()) {\n            resolve();\n          } else {\n            if (this.db) {\n              if (this.idColumnName !== null) {\n                const records = await this.db.findAll();\n                this[this.idColumnName] = (records.map(record => parseInt(record[this.idColumnName])).sort().pop() || 0) + 1\n                resolve();\n              } else {\n                reject({\n                  errors: {\n                    idColumnName: 'is not defined',\n                  },\n                })\n              }\n            } else {\n              reject({\n                errors: {\n                  tableName: 'is not defined',\n                },\n              })\n            }\n          }\n        } else {\n          resolve();\n        }\n      })\n    }\n\n  // SAVE\n    save() {\n      return new Promise(async (resolve, reject) => {\n        if (this.db) {\n          this.isValid().then(() => {\n            this.invokeCallbacks(\"before\", \"Save\");\n            this.invokeCallbacks(\"on\", \"Save\");\n            this.db.put(this.toJson()).then(() => {\n              this.invokeCallbacks(\"after\", \"Save\");\n              resolve(this);\n            }).catch(error => {\n              reject(error);\n            })\n          }).catch(errors => {\n            reject({\n              errors,\n            });\n          })\n        } else {\n          reject({\n            errors: {\n              tableName: 'is not defined',\n            },\n          });\n        }\n      })\n    }\n\n  // UPDATE\n    update() {\n      return new Promise((resolve, reject) => {\n        if (this.db) {\n          this.isValid().then(() => {\n            this.invokeCallbacks(\"before\", \"Update\");\n            this.invokeCallbacks(\"on\", \"Update\");\n            this.db.put(this.toJson()).then(data => {\n              this.invokeCallbacks(\"after\", \"Update\");\n              resolve(data);\n            }).catch(error => {\n              reject(error);\n            })\n          }).catch(errors => {\n            reject({\n              errors,\n            });\n          })\n        } else {\n          reject({\n            errors: {\n              tableName: 'is not defined',\n            },\n          })\n        }\n      })\n    }\n\n    delete() {\n      return new Promise((resolve, reject) => {\n        if (this.db) {\n          this.invokeCallbacks(\"before\", \"Delete\");\n          this.invokeCallbacks(\"on\", \"Delete\");\n\n          let keys = {\n            [this.idColumnName]: this[this.idColumnName],\n          }\n\n          if (this.secondaryIdColumnName) {\n            keys[this.secondaryIdColumnName] = this[this.secondaryIdColumnName];\n          }\n\n          this.db.delete(keys).then(data => {\n            this.invokeCallbacks(\"after\", \"Delete\");\n            resolve(data);\n          }).catch(error => {\n            reject(error);\n          })\n        } else {\n          reject({\n            errors: {\n              tableName: 'is not defined',\n            },\n          })\n        }\n      })\n    }\n\n  // TO JSON\n    static addJsonAttributes(...attributes) {\n      this._jsonAttributes = (this._jsonAttributes || []).concat(attributes);\n    }\n\n    static jsonAttributes() {\n      return this._jsonAttributes || [];\n    }\n\n    toJson() {\n      return this.customJson(this.constructor.jsonAttributes())\n    }\n\n    customJson(attrs) {\n      const finalJson = {}\n      for (const attr of attrs) {\n        if (this[attr] && this[attr].toJson) {\n          finalJson[attr] = this[attr].toJson();\n        } else if (Array.isArray(this[attr])) {\n          finalJson[attr] = this[attr].map(elem => {\n            if (elem && elem.toJson) {\n              return elem.toJson();\n            } else {\n              return elem;\n            }\n          })\n        } else {\n          finalJson[attr] = this[attr];\n        }\n      }\n      return finalJson;\n    }\n\n  // VALIDATIONS\n    isValid() {\n      return new Promise(async (resolve, reject) => {\n        this.errors = {};\n\n        this.invokeCallbacks(\"before\", \"Validation\");\n        if (this.constructor.idIsUUID()) {\n          this.generateUUIDasId();\n        } else if (this.constructor.idIsAutoIncremented()) {\n          await this.autoIncrementId();\n        }\n        this.generateSlug();\n\n        this.validatePresence();\n        this.validateType();\n        this.validateInclusion();\n        await this.validateAssociations()\n        this.invokeCallbacks(\"on\", \"Validation\");\n\n        const valid = (Object.keys(this.errors).length === 0);\n        if (valid) {\n          this.invokeCallbacks(\"after\", \"Validation\");\n          resolve(this)\n        } else {\n          reject(this.errors)\n        }\n      })\n    }\n\n    // PRESENCE\n    static validatesPresenceOf(...attributes) {\n      this._requiredVariables = (this._requiredVariables || []).concat(attributes);\n    }\n\n    get requiredVariables() {\n      return this.constructor._requiredVariables || [];\n    }\n\n    validatePresence() {\n      for (const attr of this.requiredVariables) {\n        if (this[attr] === null || this[attr] === undefined || this[attr] === '') {\n          this.errors[attr] = 'não pode ficar em branco.';\n        }\n      }\n    }\n\n    // TYPES\n    static validatesTypeOf(attributes = {}) {\n      this._typeVariables = Object.assign((this._typeVariables || {}), attributes);\n    }\n\n    get typeVariables() {\n      return this.constructor._typeVariables || {};\n    }\n\n    validateType() {\n      for (const [key, value] of Object.entries(this.typeVariables)) {\n        if (!this[key]) {\n          continue;\n        } else {\n          if (typeof(value) === 'string') {\n            if (typeof(this[key]) !== value) {\n              this.errors[key] = `é um(a) ${typeof(this[key])} e deveria ser um(a) ${value}.`;\n            }\n          }\n        }\n      }\n    }\n\n    // ASSOCIATION\n    static validatesAssociated(attributes = {}) {\n      this._associatedVariables = Object.assign((this._associatedVariables || {}), attributes);\n    }\n\n    get associatedVariables() {\n      return this.constructor._associatedVariables || {}\n    }\n\n    async validateAssociations() {\n      for (const [key, value] of Object.entries(this.associatedVariables)) {\n        if (!this[key]) {\n          continue;\n        } else {\n          if (Array.isArray(this[key])) {\n            for (const association of this[key]) {\n              if (!(association instanceof value)) {\n                this.errors[key] = `todos os elementos do array devem ser do tipo ${value}`\n              } else {\n                await association.isValid().catch(errors => {\n                  this.errors[key] = `um dos elementos do array é invalido: ${JSON.stringify(errors)}`\n                })\n              }\n            }\n          } else {\n            if (!(this[key] instanceof value)) {\n              this.errors[key] = `deve ser do tipo ${value}`\n            } else {\n              await this[key].isValid().catch(errors => {\n                this.errors[key] = `o elemento é inválido: ${errors}`\n              })\n            }\n          }\n        }\n      }\n    }\n\n    // INCLUSION\n    static validatesInclusionOf(attributes = {}) {\n      this._inclusionVariables = Object.assign((this._inclusionVariables || {}), attributes);\n    }\n\n    get inclusionVariables() {\n      return this.constructor._inclusionVariables || {};\n    }\n\n    validateInclusion() {\n      for (const [key, value] of Object.entries(this.inclusionVariables)) {\n        if (!this[key]) {\n          continue;\n        } else {\n          if (value.indexOf(this[key]) === -1) {\n            this.errors[key] = `deve estar incluído em ${JSON.stringify(value)}, mas o valor é ${this[key]}.`;\n          }\n        }\n      }\n    }\n\n  // CALLBACKS\n    invokeCallbacks(callbackMoment, action) {\n      const varName = `${callbackMoment}${action}Callbacks`;\n\n      for (const callback of (this.constructor[varName]() || [])) {\n        callback.call(this);\n      }\n    }\n\n    static afterInitialize(...funcs) {\n      const varName = `_afterInitializeCallbacks`;\n      this[varName] = (this[varName] || []).concat(funcs);\n    }\n\n    static afterInitializeCallbacks() {\n      return this._afterInitializeCallbacks;\n    }\n\n    static beforeValidation(...funcs) {\n      const varName = `_beforeValidationCallbacks`;\n      this[varName] = (this[varName] || []).concat(funcs);\n    }\n\n    static beforeValidationCallbacks() {\n      return this._beforeValidationCallbacks;\n    }\n\n    static onValidation(...funcs) {\n      const varName = `_onValidationCallbacks`;\n      this[varName] = (this[varName] || []).concat(funcs);\n    }\n\n    static onValidationCallbacks() {\n      return this._onValidationCallbacks;\n    }\n\n    static afterValidation(...funcs) {\n      const varName = `_afterValidationCallbacks`;\n      this[varName] = (this[varName] || []).concat(funcs);\n    }\n\n    static afterValidationCallbacks() {\n      return this._afterValidationCallbacks;\n    }\n\n    static beforeSave(...funcs) {\n      const varName = `_beforeSaveCallbacks`;\n      this[varName] = (this[varName] || []).concat(funcs);\n    }\n\n    static beforeSaveCallbacks() {\n      return this._beforeSaveCallbacks;\n    }\n\n    static onSave(...funcs) {\n      const varName = `_onSaveCallbacks`;\n      this[varName] = (this[varName] || []).concat(funcs);\n    }\n\n    static onSaveCallbacks() {\n      return this._onSaveCallbacks;\n    }\n\n    static afterSave(...funcs) {\n      const varName = `_afterSaveCallbacks`;\n      this[varName] = (this[varName] || []).concat(funcs);\n    }\n\n    static afterSaveCallbacks() {\n      return this._afterSaveCallbacks;\n    }\n\n    static beforeUpdate(...funcs) {\n      const varName = `_beforeUpdateCallbacks`;\n      this[varName] = (this[varName] || []).concat(funcs);\n    }\n\n    static beforeUpdateCallbacks() {\n      return this._beforeUpdateCallbacks;\n    }\n\n    static onUpdate(...funcs) {\n      const varName = `_onUpdateCallbacks`;\n      this[varName] = (this[varName] || []).concat(funcs);\n    }\n\n    static onUpdateCallbacks() {\n      return this._onUpdateCallbacks;\n    }\n\n    static afterUpdate(...funcs) {\n      const varName = `_afterUpdateCallbacks`;\n      this[varName] = (this[varName] || []).concat(funcs);\n    }\n\n    static afterUpdateCallbacks() {\n      return this._afterUpdateCallbacks;\n    }\n\n    static beforeDelete(...funcs) {\n      const varName = `_beforeDeleteCallbacks`;\n      this[varName] = (this[varName] || []).concat(funcs);\n    }\n\n    static beforeDeleteCallbacks() {\n      return this._beforeDeleteCallbacks;\n    }\n\n    static onDelete(...funcs) {\n      const varName = `_onDeleteCallbacks`;\n      this[varName] = (this[varName] || []).concat(funcs);\n    }\n\n    static onDeleteCallbacks() {\n      return this._onDeleteCallbacks;\n    }\n\n    static afterDelete(...funcs) {\n      const varName = `_afterDeleteCallbacks`;\n      this[varName] = (this[varName] || []).concat(funcs);\n    }\n\n    static afterDeleteCallbacks() {\n      return this._afterDeleteCallbacks;\n    }\n\n  // INDEXES\n    static registerIndexes(indexes = {}) {\n      this._indexes = indexes;\n    }\n\n    static getIndexes() {\n      return this._indexes;\n    }\n\n  // CLASS METHODS\n    static find(id, secondary = null) {\n\n      return new Promise((resolve, reject) => {\n        if (this.db()) {\n          let idValue = id;\n          if (this.idIsAutoIncremented()) {\n            idValue = parseInt(id);\n          }\n\n          let keys = {\n            [this.idColumnName]: idValue,\n          }\n\n          if (this.secondaryIdColumnName) {\n            keys[this.secondaryIdColumnName] = secondary;\n          }\n\n          this.db().find(keys).then(item => {\n            resolve(new this(item));\n          }).catch(error => {\n            reject(error);\n          })\n        } else {\n          reject({\n            errors: {\n              tableName: 'is not defined',\n            },\n          })\n        }\n      })\n    }\n\n    static where(args = {}, opts = {}) {\n      Object.assign(opts, {\n        indexes: this.getIndexes(),\n      });\n      return new Promise((resolve, reject) => {\n        if (this.db()) {\n          this.db().where(args, opts).then(items => {\n            resolve(items.map(item => new this(item)));\n          }).catch(error => {\n            reject(error);\n          })\n        } else {\n          reject({\n            errors: {\n              tableName: 'is not defined',\n            },\n          })\n        }\n      })\n    }\n\n    static findAll() {\n      return new Promise((resolve, reject) => {\n        if (this.db()) {\n          this.db().findAll().then(items => {\n            resolve(items.map(item => {\n              return new this(item);\n            }))\n          }).catch(error => {\n            reject(error);\n          })\n        } else {\n          reject({\n            errors: {\n              tableName: 'is not defined',\n            },\n          })\n        }\n      })\n    }\n\n  // SLUG\n    static createSlugFrom(slugFromAttribute, slugAttribute = 'slug') {\n      this._slugFromAttribute = slugFromAttribute;\n      this._slugAttribute = slugAttribute;\n    }\n\n    static slugFromAttribute() {\n      return this._slugFromAttribute;\n    }\n\n    static slugAttribute() {\n      return this._slugAttribute;\n    }\n\n    static shouldGenerateSlug() {\n      return this.slugFromAttribute() && this.slugAttribute();\n    }\n\n    generateSlug() {\n      if (this.constructor.shouldGenerateSlug()) {\n        const value = this[this.constructor.slugFromAttribute()]\n        if (value) {\n          this[this.constructor.slugAttribute()] = urlify(value)\n        }\n      }\n    }\n}\n\nmodule.exports = BaseModel;\n","module.exports = require(\"aws-sdk\");","const moment = require('moment');\n\nconst AWS = require('aws-sdk');\nconst apiGateway = new AWS.APIGateway();\n\nconst { PlantModel, GardenerModel, DeviceModel, GardenModel } = require('../models')\n\nmodule.exports.getPlant = async (event, context, callback) => {\n\n  let { plantId } = event.pathParameters || {};\n\n  await PlantModel.where({id: parseInt(plantId)}).then(plant => {\n    if (plant) {\n      console.log(\"fetching plant\", { success: true, model: plant });\n      callback(null, { statusCode: 200, body: JSON.stringify({ message: \"Plant succesfully fetched\", body: plant }) })\n    } else {\n      console.log(\"No plant with the provided id.\", { success: false });\n      callback(null, { statusCode: 422, body: JSON.stringify({ message: \"No plant to fetch\" }) })\n    }\n\n  }).catch(error => {\n    console.log(\"Can't fetch plant\", { error: error });\n    callback(null, { statusCode: 422, body: JSON.stringify({ message: \"Can't fetch plant\" }) })\n  })\n}\n\nmodule.exports.listPlants = async (event, context, callback) => {\n\n  let params = {};\n\n  console.log(event)\n\n  if(event.queryStringParameters.deviceId){\n    params['deviceId'] = {\n      value: partseInt(event.queryStringParameters.deviceId),\n    }\n  }\n\n  if(event.queryStringParameters.gardenId){\n    params['gardenId'] = {\n      value: parseInt(event.queryStringParameters.gardenId),\n    }\n  }\n\n  if(event.queryStringParameters.gardenerId){\n    params['gardenerId'] = {\n      value: parseInt(event.queryStringParameters.gardenId),\n    }\n  }\n\n  if (Object.keys(params).lenght == 0)\n    callback(null, { statusCode: 422, body: JSON.stringify({ message: \"No params passed!\" }) })\n\n  await PlantModel.where(params).then(plants => {\n    let plantsResponse\n    if (plants.length > 0) {\n      plantsResponse = plants.map(plant => {plant.toJson()})\n      console.log(\"fetching plant\", { success: true, model: plants });\n      callback(null, { statusCode: 200, body: JSON.stringify({ message: \"Plants succesfully fetched\", body: plants }) })\n    } else {\n      callback(null, { statusCode: 422, body: JSON.stringify({ message: \"No plant to fetch\" }) })\n    }\n\n  }).catch(error => {\n    console.log(\"Can't fetch plant\", { error: error });\n    callback(null, { statusCode: 422, body: JSON.stringify({ message: \"Can't fetch plants\" }) })\n  })\n}\n\nmodule.exports.newPlant = (event, context, callback) => {\n  try {\n    return new Promise(async (resolve, reject) => {\n      if (event.body)\n        event = event.body\n      else\n        event = JSON.parse(event.body);\n\n      let id = await PlantModel.findAll().then(plants => {\n        return (plants.length + 1)\n      }).catch(error => {\n        callback(null, { statusCode: 400, body: JSON.stringify({ message: \"Failed to retrieve plant on database.\" }) })\n        reject(error)\n      })\n\n      let plant = event.plant;\n\n      var params = {\n        id: id,\n        name: plant.name,\n        gardenerId: plant.gardenerId,\n        gardenId: plant.gardenId,\n        deviceId: plant.deviceId,\n        type: plant.type\n      };\n\n      plant = new PlantModel(params);\n\n      console.log(plant)\n\n      await plant.save().then(async () => {\n        let device = await DeviceModel.find(plant.deviceId).catch(error => {\n          reject(error)\n        })\n\n        console.log(device)\n\n        device.plantsCount += 1\n\n        await device.save().catch(error => {\n          reject(error)\n        })\n\n        let garden = await GardenModel.find(plant.gardenId).catch(error => {\n          reject(error)\n        })\n\n        garden.plantsCount += 1\n\n        await garden.save().catch(error => {\n          reject(error)\n        })\n\n        callback(null, { statusCode: 200, body: JSON.stringify({ message: \"Plant registered successfully!\", body: plant.toJson() }) })\n\n        resolve(plant)\n      }).catch((error) => {\n        reject(error)\n      });\n    })\n  } catch(error) {\n    console.log(error)\n    callback(null, apiResponse(400, {\n      body: {\n        message: 'Failed to create plant.',\n      },\n    }));\n  }\n}\n","module.exports = require(\"moment\");","const MeasureModel = require('./measureModel')\nconst GardenerModel = require('./gardenerModel')\nconst DeviceModel = require('./deviceModel')\nconst PlantModel = require('./plantModel')\nconst GardenModel = require('./gardenModel')\n\nmodule.exports = {\n  MeasureModel,\n  GardenerModel,\n  DeviceModel,\n  PlantModel,\n  GardenModel,\n}\n","const moment = require('moment-timezone')\nconst BaseModel = require('./baseModel')\n\nclass MeasureModel extends BaseModel {\n  // GETTERS, SETTERS AND FUNCTIONS\n  // set sensor(value) {\n  //   this._sensor = value\n  // }\n  //\n  // get sensor() {\n  //   return this._sensor\n  // }\n\n}\n\nMeasureModel.idColumnName = 'id';\nMeasureModel.secondaryIdColumnName = 'measuredAt';\nMeasureModel.tableName = process.env.dynamodbMeasureTable;\n\nMeasureModel.validatesPresenceOf(\n  'id',\n  'sensor',\n  'value',\n  'measuredAt',\n  'plantId'\n)\n\nMeasureModel.validatesTypeOf({\n  id: 'string',\n  sensor: 'string',\n  value: 'string',\n  measuredAt: 'string',\n  plantId: 'number'\n})\n\nMeasureModel.beforeValidation(function() {\n  if (!this.measuredAt) {\n    this.measuredAt = moment().tz('America/Sao_Paulo').format();\n  }\n})\n\nMeasureModel.addJsonAttributes(\n  'id',\n  'sensor',\n  'value',\n  'state',\n  'measuredAt',\n  'plantId'\n)\n\nMeasureModel.generateUUIDasId('measuredAt')\n\nMeasureModel.registerIndexes({\n  base: {\n    hash: 'id',\n    range: 'measuredAt'\n  },\n  Sensor: {\n    hash: 'sensor',\n    range: 'measuredAt'\n  },\n  PlantId: {\n    hash: 'plantId',\n    range: 'measuredAt'\n  }\n})\n\nmodule.exports = MeasureModel\n","const DynamoDB = require('./dynamodb');\n\nmodule.exports = {\n  DynamoDB,\n}\n","const AWS = require('aws-sdk');\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\n\nclass DynamoDB {\n  constructor(tableName) {\n    this.tableName = tableName;\n  }\n\n  findAll() {\n    return this.getAll({\n      TableName: this.tableName,\n    });\n  }\n\n  find(idObject) {\n    let keyParams = {};\n    for (const [key, value] of Object.entries(idObject)) {\n      keyParams[key] = value;\n    }\n\n    return dynamoDb.get({\n      TableName: this.tableName,\n      Key: keyParams,\n    }).promise().then(data => data.Item)\n  }\n\n  put(json) {\n    return dynamoDb.put({\n      TableName: this.tableName,\n      Item: json,\n    }).promise()\n  }\n\n  delete(keys) {\n    return dynamoDb.delete({\n      TableName: this.tableName,\n      Key: keys,\n    }).promise()\n  }\n\n  update(keys, args = {}) {\n    const params = this.generateExpressions(args, { update: true });\n    params[\"Key\"] = keys;\n\n    return dynamoDb.update(params).promise();\n  }\n\n  where(args = {}, opts = {}) {\n    const params = this.generateExpressions(args, opts);\n\n    return this.getAll(params);\n  }\n\n  async getAll(params) {\n    console.log(params)\n    let { items, lastEvaluatedKey } = await this.getAllRequest(params);\n    let response = {\n      items: items\n    }\n    if (params[\"Paginated\"]) {\n      delete params[\"Paginated\"]\n      response.lastEvaluatedKey = lastEvaluatedKey\n      return response;\n    } else {\n      while (lastEvaluatedKey) {\n        params[\"ExclusiveStartKey\"] = lastEvaluatedKey;\n        const scanReturn = await this.getAllRequest(params);\n        items = items.concat(scanReturn.items);\n        lastEvaluatedKey = scanReturn.lastEvaluatedKey;\n      }\n      return items;\n    }\n  }\n\n  getAllRequest(params) {\n    const promise = params['KeyConditionExpression']\n      ? dynamoDb.query(params).promise()\n      : dynamoDb.scan(params).promise()\n\n    return promise\n      .then(data => {\n        return {\n          items: data.Items,\n          lastEvaluatedKey: data.LastEvaluatedKey,\n        };\n      });\n  }\n\n  batchWrite(records, args = {}) {\n    const putRequests = records.map(record => {\n      for (const [key, value] of Object.entries(args)) {\n        record[key] = value;\n      }\n\n      return {\n        PutRequest: {\n          Item: record,\n        },\n      }\n    })\n\n    const putRequestsChunks = divideArrayInChunks(putRequests, 25);\n    return new Promise((resolve, reject) => {\n      Promise.all(putRequestsChunks.map(chunk => {\n        return dynamoDb.batchWrite({\n          RequestItems: {\n            [this.tableName]: chunk,\n          },\n        }).promise()\n      })).then(allResponses => {\n        let unprocessedItems = [];\n        for (const response of allResponses) {\n          if (response.UnprocessedItems && Object.keys(response.UnprocessedItems).length > 0) {\n            unprocessedItems = unprocessedItems.concat(\n              response.UnprocessedItems[this.tableName].map(item => item.PutRequest.Item)\n            );\n          }\n        }\n        if (unprocessedItems.length > 0) {\n          reject({\n            unprocessedItems,\n          })\n        } else {\n          resolve(allResponses);\n        }\n      }).catch(error => {\n        reject({\n          error,\n        })\n      })\n    });\n  }\n\n  async guaranteedBatchWrite(records, args = {}) {\n    let unprocessedItems = records;\n    let error = null;\n\n    while (unprocessedItems.length > 0 && error === null) {\n      await this.batchWrite(unprocessedItems, args)\n        .then(() => {\n          unprocessedItems = []\n        }).catch(errorObject => {\n          if (errorObject.error) {\n            error = errorObject.error;\n          } else {\n            unprocessedItems = errorObject.unprocessedItems;\n          }\n        });\n    }\n\n    return new Promise((resolve, reject) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve();\n      }\n    })\n  }\n\n  generateExpressions(args = {}, opts = {}) {\n    const ExpressionAttributeNames = {};\n    const ExpressionAttributeValues = {};\n    let KeyConditionExpressions = [];\n    let Expressions = [];\n    let counter = 0;\n\n    let indexName;\n    let index;\n    for (const [key, value] of Object.entries(opts.indexes)) {\n      if (args[value.hash] || args[value.hash] === 0) {\n        indexName = key;\n        index = value;\n      }\n    }\n\n    for (const [key, value] of Object.entries(args)) {\n      const attributeName = `#var${counter}`;\n      const attributeValue = `:var${counter}`;\n\n      const isObject = typeof value === 'object' && value !== null;\n\n      const operator = isObject ? (value.operator || '=') : '=';\n      let finalValue = isObject ? value.value : value;\n\n      if (key != \"exclusiveStartKey\")\n        if (index && (key === index.hash || key === index.range)) {\n          ExpressionAttributeNames[attributeName] = key;\n          if (operator === 'between') {\n            ExpressionAttributeValues[`${attributeValue}min`] = value.min;\n            ExpressionAttributeValues[`${attributeValue}max`] = value.max;\n            KeyConditionExpressions.push(`${attributeName} between ${attributeValue}min and ${attributeValue}max`);\n          } else if (finalValue === null) {\n            KeyConditionExpressions.push(`attribute_not_exists(${attributeName})`);\n          } else {\n            ExpressionAttributeValues[`${attributeValue}`] = finalValue;\n            KeyConditionExpressions.push(`${attributeName} ${operator} ${attributeValue}`);\n          }\n        } else {\n          let extraParts = [];\n          let partCounter = 0;\n          for (const part of key.split('.').slice(0, -1)) {\n            const attrName = `${attributeName}${partCounter}`;\n            ExpressionAttributeNames[attrName] = part;\n            extraParts.push(attrName);\n            partCounter++;\n          }\n          ExpressionAttributeNames[attributeName] = key.split('.').splice(-1)[0];\n\n          if (finalValue === null && !opts.update) {\n            if (operator === 'between') {\n              ExpressionAttributeValues[`${attributeValue}min`] = value.min;\n              ExpressionAttributeValues[`${attributeValue}max`] = value.max;\n              Expressions.push(`${attributeName} between ${attributeValue}min and ${attributeValue}max`);\n            } else {\n              Expressions.push(`attribute_not_exists(${attributeName})`);\n            }\n          } else if (key == 'created_at') {\n            ExpressionAttributeValues[`${attributeValue}min`] = value.min;\n            ExpressionAttributeValues[`${attributeValue}max`] = value.max;\n            Expressions.push(`${attributeName} between ${attributeValue}min and ${attributeValue}max`);\n          } else {\n            ExpressionAttributeValues[attributeValue] = finalValue;\n\n            let finalAttributeName;\n            if (extraParts.length > 0) {\n              extraParts.push(attributeName);\n              finalAttributeName = extraParts.join('.');\n            } else {\n              finalAttributeName = attributeName;\n            }\n            Expressions.push(`${finalAttributeName} ${operator} ${attributeValue}`);\n          }\n        }\n\n      counter++;\n    }\n\n    const params = {\n      TableName: this.tableName,\n    }\n\n    if (Object.entries(ExpressionAttributeNames).length > 0) {\n      params[\"ExpressionAttributeNames\"] = ExpressionAttributeNames;\n    }\n\n    if (Object.entries(ExpressionAttributeValues).length > 0) {\n      params[\"ExpressionAttributeValues\"] = ExpressionAttributeValues;\n    }\n\n    if (KeyConditionExpressions.length > 0) {\n      if (indexName !== 'base') {\n        params[\"IndexName\"] = indexName;\n      }\n      params[\"KeyConditionExpression\"] = KeyConditionExpressions.join(' and ');\n    }\n\n    if (Expressions.length > 0) {\n      if (opts.update) {\n        params[\"UpdateExpression\"] = `set ${Expressions.join(', ')}`;\n      } else {\n        params[\"FilterExpression\"] = Expressions.join(' AND ');\n      }\n    }\n\n    if (opts.limit)\n      params[\"Limit\"] = opts.limit\n\n    if (opts.paginated)\n      params[\"Paginated\"] = opts.paginated\n\n    if (args.exclusiveStartKey)\n      params[\"ExclusiveStartKey\"] = args.exclusiveStartKey\n\n    return params;\n  }\n}\n\nconst divideArrayInChunks = (array, chunkSize) => {\n  return array.reduce((resultArray, item, index) => {\n    const chunkIndex = Math.floor(index / chunkSize)\n\n    if(!resultArray[chunkIndex]) {\n      resultArray[chunkIndex] = [] // start a new chunk\n    }\n\n    resultArray[chunkIndex].push(item)\n\n    return resultArray\n  }, [])\n}\n\nmodule.exports = DynamoDB;\n","module.exports = require(\"urlify\");","module.exports = require(\"uuid/v1\");","module.exports = require(\"uuid/v5\");","const moment = require('moment-timezone')\nconst BaseModel = require('./baseModel')\n\nclass GardenerModel extends BaseModel {\n  // GETTERS, SETTERS AND FUNCTIONS\n  // set name(value) {\n  //   this._name = value\n  // }\n  //\n  // get name() {\n  //   return this._name\n  // }\n\n}\n\nGardenerModel.idColumnName = 'id'\nGardenerModel.tableName = process.env.dynamodbGardenerTable\n\nGardenerModel.validatesPresenceOf(\n  'id',\n  'name',\n  'email'\n)\n\nGardenerModel.validatesTypeOf({\n  id: 'number',\n  name: 'string',\n  email: 'string',\n  cognitoUserId: 'string'\n})\n\n\nGardenerModel.addJsonAttributes(\n  'id',\n  'name',\n  'email',\n  'cognitoUserId'\n)\n\nGardenerModel.registerIndexes({\n  base: {\n    hash: 'id'\n  },\n})\n\nmodule.exports = GardenerModel\n","const moment = require('moment-timezone')\nconst BaseModel = require('./baseModel')\n\nclass DeviceModel extends BaseModel {\n  // GETTERS, SETTERS AND FUNCTIONS\n  // set name(value) {\n  //   this._name = value\n  // }\n  //\n  // get name() {\n  //   return this._name\n  // }\n\n}\n\nDeviceModel.idColumnName = 'id'\nDeviceModel.tableName = process.env.dynamodbDeviceTable\n\nDeviceModel.beforeValidation(function() {\n  if (!this.plantsCount)\n    this.plantsCount = 0\n\n  if (!this.createdAt)\n    this.createdAt = moment().tz('America/Sao_Paulo').format();\n\n  if (!this.status)\n    this.status = 'off'\n})\n\nDeviceModel.validatesPresenceOf(\n  'id',\n  'type',\n  'status',\n  'plantsCount',\n  'gardenId',\n  'gardenerId',\n  'createdAt'\n)\n\nDeviceModel.validatesTypeOf({\n  id: 'number',\n  type: 'string',\n  status: 'string',\n  plantsCount: 'number',\n  gardenId: 'number',\n  gardenerId: 'number',\n  createdAt: 'string'\n})\n\n\nDeviceModel.addJsonAttributes(\n  'id',\n  'deviceType',\n  'status',\n  'plantsCount',\n  'gardenId',\n  'gardenerId',\n  'createdAt'\n)\n\nDeviceModel.registerIndexes({\n  base: {\n    hash: 'id'\n  },\n  GardenId: {\n    hash: 'gardenId'\n  },\n  GardenerId: {\n    hash: 'gardenerId'\n  }\n})\n\nmodule.exports = DeviceModel\n","const moment = require('moment-timezone')\nconst BaseModel = require('./baseModel')\n\nclass PlantModel extends BaseModel {\n  // GETTERS, SETTERS AND FUNCTIONS\n  // set sensor(value) {\n  //   this._sensor = value\n  // }\n  //\n  // get sensor() {\n  //   return this._sensor\n  // }\n\n}\n\nPlantModel.idColumnName = 'id'\nPlantModel.secondaryIdColumnName = 'createdAt'\nPlantModel.tableName = process.env.dynamodbPlantTable;\n\nPlantModel.validatesPresenceOf(\n  'id',\n  'name',\n  'type',\n  'soilHumidity',\n  'soilHumidityStatus',\n  'lumens',\n  'lightStatus',\n  'createdAt',\n  'deviceId',\n  'gardenId',\n  'gardenerId'\n)\n\nPlantModel.validatesTypeOf({\n  id: 'number',\n  name: 'string',\n  type: 'string',\n  soilHumidity: 'number',\n  soilHumidityStatus: 'string',\n  lumens: 'number',\n  lightStatus: 'string',\n  createdAt: 'string',\n  lastMeasuredAt: 'string',\n  deviceId: 'number',\n  gardenId: 'number',\n  gardenerId: 'number',\n})\n\nPlantModel.beforeValidation(function() {\n  if (!this.createdAt)\n    this.createdAt = moment().tz('America/Sao_Paulo').format()\n\n  if (!this.soilHumidity) {\n    this.soilHumidity = 0\n    this.soilHumidityStatus = 'off'\n  }\n\n  if (!this.lumens) {\n    this.lumens = 0\n    this.lightStatus = 'off'\n  }\n})\n\nPlantModel.addJsonAttributes(\n  'id',\n  'name',\n  'type',\n  'soilHumidity',\n  'soilHumidityStatus',\n  'lumens',\n  'lightStatus',\n  'createdAt',\n  'deviceId',\n  'gardenId',\n  'gardenerId'\n)\n\nPlantModel.registerIndexes({\n  base: {\n    hash: 'id'\n  },\n  DeviceId: {\n    hash: 'deviceId'\n  },\n  GardenId: {\n    hash: 'GardenId'\n  },\n  GardenerId: {\n    hash: 'GardenerId'\n  }\n})\n\nmodule.exports = PlantModel\n","const moment = require('moment-timezone')\nconst BaseModel = require('./baseModel')\n\nclass GardenModel extends BaseModel {\n  // GETTERS, SETTERS AND FUNCTIONS\n  // set name(value) {\n  //   this._name = value\n  // }\n  //\n  // get name() {\n  //   return this._name\n  // }\n\n}\n\nGardenModel.idColumnName = 'id'\nGardenModel.tableName = process.env.dynamodbGardenTable\n\nGardenModel.beforeValidation(function() {\n  if (!this.plantsCount)\n    this.plantsCount = 0\n\n  if (!this.devicesCount)\n    this.devicesCount = 0\n\n  if (!this.createdAt)\n    this.createdAt = moment().tz('America/Sao_Paulo').format();\n})\n\nGardenModel.validatesPresenceOf(\n  'id',\n  'name',\n  'plantsCount',\n  'devicesCount',\n  'gardenerId',\n  'createdAt'\n)\n\nGardenModel.validatesTypeOf({\n  id: 'number',\n  name: 'string',\n  plantsCount: 'number',\n  devicesCount: 'number',\n  gardenerId: 'number',\n  createdAt: 'string'\n})\n\n\nGardenModel.addJsonAttributes(\n  'id',\n  'name',\n  'plantsCount',\n  'devicesCount',\n  'gardenerId',\n  'createdAt'\n)\n\nGardenModel.registerIndexes({\n  base: {\n    hash: 'id'\n  },\n  GardenerId: {\n    hash: 'gardenerId'\n  }\n})\n\nmodule.exports = GardenModel\n"],"sourceRoot":""}